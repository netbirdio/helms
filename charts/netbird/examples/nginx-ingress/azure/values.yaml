fullnameOverride: netbird
management:
  configmap: |-
    {
        "Stuns": [
            {
                "Proto": "udp",
                "URI": "{{ .STUN_SERVER }}",
                "Username": "",
                "Password": ""
            }
        ],
        "TURNConfig": {
            "TimeBasedCredentials": false,
            "CredentialsTTL": "12h0m0s",
            "Secret": "secret",
            "Turns": [
                {
                    "Proto": "udp",
                    "URI": "{{ .TURN_SERVER }}",
                    "Username": "{{ .TURN_SERVER_USER }}",
                    "Password": "{{ .TURN_SERVER_PASSWORD }}"
                }
            ]
        },
        "Relay": {
            "Addresses": [
                "rels://netbird.example.com/relay"
            ],
            "CredentialsTTL": "24h0m0s",
            "Secret": "{{ .RELAY_PASSWORD }}"
        },
        "Signal": {
            "Proto": "https",
            "URI": "netbird.example.com:443",
            "Username": "",
            "Password": ""
        },
        "Datadir": "/var/lib/netbird/",
        "DataStoreEncryptionKey": "{{ .DATASTORE_ENCRYPTION_KEY }}",
        "HttpConfig": {
            "LetsEncryptDomain": "",
            "CertFile": "",
            "CertKey": "",
            "AuthAudience": "{{ .IDP_CLIENT_ID }}",
            "AuthIssuer": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/v2.0",
            "AuthUserIDClaim": "oid",
            "AuthKeysLocation": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/discovery/v2.0/keys",
            "OIDCConfigEndpoint": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/v2.0/.well-known/openid-configuration",
            "IdpSignKeyRefreshEnabled": false,
            "ExtraAuthAudience": ""
        },
        "IdpManagerConfig": {
            "ManagerType": "azure",
            "ClientConfig": {
                "Issuer": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/v2.0",
                "TokenEndpoint": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/oauth2/v2.0/token",
                "ClientID": "{{ .IDP_CLIENT_ID }}",
                "ClientSecret": "{{ .IDP_CLIENT_SECRET }}",
                "GrantType": "client_credentials"
            },
            "ExtraConfig": {
                "GraphApiEndpoint": "https://graph.microsoft.com/v1.0",
                "ObjectId": "{{ .IDP_OBJECT_ID }}"
            },
            "Auth0ClientCredentials": null,
            "AzureClientCredentials": null,
            "KeycloakClientCredentials": null,
            "ZitadelClientCredentials": null
        },
        "DeviceAuthorizationFlow": {
            "Provider": "none",
            "ProviderConfig": {
                "ClientID": "",
                "ClientSecret": "",
                "Domain": "",
                "Audience": "{{ .IDP_CLIENT_ID }}",
                "TokenEndpoint": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/oauth2/v2.0/token",
                "DeviceAuthEndpoint": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/oauth2/v2.0/devicecode",
                "AuthorizationEndpoint": "",
                "Scope": "openid",
                "UseIDToken": false,
                "RedirectURLs": null,
                "DisablePromptLogin": false,
                "LoginFlag": 0
            }
        },
        "PKCEAuthorizationFlow": {
            "ProviderConfig": {
                "ClientID": "{{ .IDP_CLIENT_ID }}",
                "ClientSecret": "",
                "Domain": "",
                "Audience": "{{ .IDP_CLIENT_ID }}",
                "TokenEndpoint": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/oauth2/v2.0/token",
                "DeviceAuthEndpoint": "",
                "AuthorizationEndpoint": "https://login.microsoftonline.com/{{ .IDP_DIRECTORY_ID }}/oauth2/v2.0/authorize",
                "Scope": "openid profile email offline_access User.Read api://{{ .IDP_CLIENT_ID }}/api",
                "UseIDToken": true,
                "RedirectURLs": [
                    "http://localhost:53000"
                ],
                "DisablePromptLogin": false,
                "LoginFlag": 0
            }
        },
        "StoreConfig": {
            "Engine": "postgres"
        },
        "ReverseProxy": {
            "TrustedHTTPProxies": [],
            "TrustedHTTPProxiesCount": 0,
            "TrustedPeers": [
                "0.0.0.0/0"
            ]
        }
    }

  envFromSecret:
    NETBIRD_STORE_ENGINE_POSTGRES_DSN: netbird/postgresDSN
    STUN_SERVER: netbird/stunServer
    TURN_SERVER: netbird/turnServer
    TURN_SERVER_USER: netbird/turnServerUser
    TURN_SERVER_PASSWORD: netbird/turnServerPassword
    RELAY_PASSWORD: netbird/relayPassword
    IDP_CLIENT_ID: netbird/idpClientID
    IDP_CLIENT_SECRET: netbird/idpClientSecret
    IDP_OBJECT_ID: netbird/idpObjectId
    IDP_DIRECTORY_ID: netbird/idpDirectoryId
    DATASTORE_ENCRYPTION_KEY: netbird/datastoreEncryptionKey

  podCommand:
    args:
      - --port=80
      - --log-file=console
      - --log-level=error
      - --disable-anonymous-metrics=false
      - --dns-domain=netbird.selfhosted

  image:
    tag: latest

  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: netbird.example.com
        paths:
          - path: /api
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-api-tls
        hosts:
          - netbird.example.com
  ingressGrpc:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/backend-protocol: GRPC
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    hosts:
      - host: netbird.example.com
        paths:
          - path: /management.ManagementService
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-grpc-tls
        hosts:
          - netbird.example.com
  persistentVolume:
    enabled: false
  useBackwardsGrpcService: true

signal:
  image:
    tag: latest
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/backend-protocol: GRPC
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    hosts:
      - host: netbird.example.com
        paths:
          - path: /signalexchange.SignalExchange
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-signal-tls
        hosts:
          - netbird.example.com

relay:
  resources:
    requests:
      cpu: 300m
      memory: 128Mi
    limits:
      cpu: 1000m
      memory: 256Mi
  image:
    tag: latest
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: netbird.example.com
        paths:
          - path: /relay
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-relay-tls
        hosts:
          - netbird.example.com
  envFromSecret:
    NB_AUTH_SECRET: netbird/relayPassword
  env:
    NB_LOG_LEVEL: info
    NB_LISTEN_ADDRESS: ":33080"
    NB_EXPOSED_ADDRESS: rels://netbird.example.com/relay

dashboard:
  enabled: true
  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: netbird-dashboard.example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: netbird-dashboard-tls
        hosts:
          - netbird-dashboard.example.com
  image:
    tag: latest
  env:
    # Endpoints
    NETBIRD_MGMT_API_ENDPOINT: https://netbird.example.com:443
    NETBIRD_MGMT_GRPC_API_ENDPOINT: https://netbird.example.com:443
    # OIDC
    USE_AUTH0: "false"
    AUTH_REDIRECT_URI: /auth
    AUTH_SILENT_REDIRECT_URI: /silent-auth
    NETBIRD_TOKEN_SOURCE: idToken
    NGINX_SSL_PORT: "443"
  envFromSecret:
    AUTH_AUDIENCE: netbird/idpClientID
    AUTH_CLIENT_ID: netbird/idpClientID
    AUTH_AUTHORITY: netbird/idpAuthAutority
    AUTH_SUPPORTED_SCOPES: netbird/idpOidcScope
